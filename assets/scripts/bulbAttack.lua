--Script generated by GroveW

bulbDamage = 10.0
damageInterval = 1.0

function bulbAttackStart()
    setBoundingBox(entity, componentManager, false)
    local enemyEntity = -1
    for i, e in pairs(enemies) do
        if e.colliderEntity == -1 then
            e.colliderEntity = entity
            e.attackCoFunc = bulbAttackCoroutine
            enemyEntity = i
            break
        end
    end

    local bulb = {attacking = false, enemyEntity = enemyEntity, attackTimeStamp = 0.0, hitTimeStamp = 0.0, hitInterval = 3.0}
    lamps[entity] = bulb
end

function bulbAttackUpdate(dt)
    setPositionRelativeToEnemy(0.0, 0.0, 0.0, enemies[lamps[entity].enemyEntity])
end

function bulbAttackCoroutine(dt)
    lamps[enemy.colliderEntity].attacking = true
    setBoundingBox(entity, componentManager, false)
    setBoundingBox(enemies[entity].colliderEntity, componentManager, true)

    local timeStamp = time
    local toPlayerX, toPlayerZ
    local x, y, z = getTransform(entity, componentManager)
    local dirX = x - player.position.x
    local dirZ = z - player.position.z
    local dirY = 0.0
    local length = math.sqrt( (dirX * dirX) + (dirY * dirY) + (dirZ * dirZ) )
    if length ~= 0.0 then
        dirX = dirX / length
        dirY = dirY / length
        dirZ = dirZ / length
    end

    local speed = 5.0

    moveObject(-dirX * speed, -dirY * speed, -dirZ * speed)
    while time - timeStamp < 0.35 do
        dt = coroutine.yield()
    end

    timeStamp = time

    moveObject(dirX * speed, dirY * speed, dirZ * speed)
    while time - timeStamp < 0.3 do
        dt = coroutine.yield()
    end

    setBoundingBox(entity, componentManager, true)
    setBoundingBox(enemies[entity].colliderEntity, componentManager, false)
    lamps[enemy.colliderEntity].attacking = false
end

function setPositionRelativeToEnemy(x, y, z, enemy)
    setTransformRelToRotatingParent(enemy.colliderEntity, componentManager, enemy.position.x, enemy.position.y, enemy.position.z, 
    x, y, z,
    enemy.rotation.x, enemy.rotation.y, enemy.rotation.z)
end

function performAttack(dt)
    local enemy = enemies[entity]
    lamps[enemy.colliderEntity].attackTimeStamp = time
    enemy.attackCo = coroutine.create(enemy.attackCoFunc)
    coroutine.resume(enemy.attackCo, dt)
end

function continueAttack(dt)
    local enemy = enemies[entity]
    coroutine.resume(enemy.attackCo, dt)
end

function bulbAttackOnCollisionEnter(box)
    local tag = getTag(box)

    if time - lamps[entity].hitTimeStamp >= damageInterval and tag == "player" then
        lamps[entity].hitTimeStamp = time
        playerGetHit(bulbDamage)
    end

    if tag == "playerWeaponLeft" or tag == "playerWeaponRight" then
        local orgEntity = entity
        entity = lamps[entity].enemyEntity
        enemyOnCollisionEnter(box)
        entity = orgEntity
    end
end